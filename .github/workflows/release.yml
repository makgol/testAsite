name: release

on:
  push:
    tags:
      - "v*"

env:
  FILE_NAME: testAsite
  PYTHON_FILE: urltest.py

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_label: linux
            archive_format: tar.gz
          - os: macos-latest
            asset_label: macos
            archive_format: tar.gz
          - os: windows-latest
            asset_label: windows
            archive_format: zip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: 3.12

      - name: Install Poetry and dependencies
        run: |
          python -m pip install --upgrade pip "poetry>=2.0.0,<3.0.0"
          poetry install
          poetry add pyinstaller

      - name: Create executable with PyInstaller
        run: poetry run pyinstaller ${{ env.PYTHON_FILE }} --name ${{ env.FILE_NAME }} --onefile

      - name: Create archive for mac and linux
        if: matrix.asset_label != 'windows'
        run: |
          pushd dist
          tar -zcvf ${{ env.FILE_NAME }}-${{ matrix.asset_label }}.${{ matrix.archive_format }} ${{ env.FILE_NAME }}
          popd

      - name: Create archive for windows
        if: matrix.asset_label == 'windows'
        run: |
          pushd dist
          Compress-Archive -Path ${{ env.FILE_NAME }}.exe -DestinationPath ${{ env.FILE_NAME }}-${{ matrix.asset_label }}.${{ matrix.archive_format }}
          popd

      - name: Adjust archive path for upload
        id: paths
        shell: bash
        run: |
          echo "asset_path=dist/${{ env.FILE_NAME }}-${{ matrix.asset_label }}.${{ matrix.archive_format }}" >> $GITHUB_OUTPUT

      - name: Upload executable to GitHub Releases
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          files: ${{ steps.paths.outputs.asset_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}